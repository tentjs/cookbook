{"mappings":"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","sources":["<anon>","node_modules/@tentjs/tent/dist/module.js","node_modules/@tentjs/tent/dist/src/main.ts","src/components/avatar.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire27b0\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire27b0\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1Ovn3\", function(module, exports) {\n\n$parcel$export(module.exports, \"mount\", () => $1522cb89a5b7fae6$export$186d02efde07ef98);\n$parcel$export(module.exports, \"tags\", () => $1522cb89a5b7fae6$export$8b7a896ae75accbf);\nfunction $1522cb89a5b7fae6$export$186d02efde07ef98(el, component) {\n    const { state: state = {}, view: view, mounted: mounted } = component;\n    let node;\n    if (el == null) return;\n    const handler = {\n        get (obj, key) {\n            if (typeof obj[key] === \"object\" && obj[key] != null) return new Proxy(obj[key], handler);\n            else return obj[key];\n        },\n        set (obj, prop, value) {\n            if (!obj.hasOwnProperty(prop)) throw new Error(`The property \"${String(prop)}\" does not exist on the state object.`);\n            if (obj[prop] === value) return true;\n            const s = Reflect.set(obj, prop, value);\n            $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$walker(node, view({\n                state: proxy,\n                el: el,\n                attr: $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute(el)\n            }));\n            return s;\n        }\n    };\n    const proxy = new Proxy({\n        ...state\n    }, handler);\n    node = view({\n        state: proxy,\n        el: el,\n        attr: $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute(el)\n    });\n    node.$tent = {\n        attributes: {},\n        isComponent: true\n    };\n    el.append(node);\n    mounted?.({\n        state: proxy,\n        el: el,\n        attr: $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute(el)\n    });\n}\nfunction $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute(el) {\n    return (name)=>{\n        const attr = el.attributes.getNamedItem(name);\n        if (!attr) return;\n        return attr.value;\n    };\n}\nfunction $1522cb89a5b7fae6$export$ee84a198a55b65e5(context) {\n    const [tag, children, attributes] = context;\n    const elm = document.createElement(tag);\n    elm.$tent = {\n        attributes: {},\n        isComponent: false\n    };\n    if (Array.isArray(children)) children.forEach((c)=>{\n        elm.append(Array.isArray(c) ? $1522cb89a5b7fae6$export$ee84a198a55b65e5(c) : c);\n    });\n    else elm.append(typeof children === \"number\" ? children.toString() : children);\n    for(const key in attributes){\n        elm.$tent.attributes[key] = attributes[key];\n        if (key.startsWith(\"on\") || /[A-Z]/.test(key)) elm[key] = attributes[key];\n        else {\n            const val = attributes[key];\n            if (typeof val === \"boolean\") {\n                if (val) elm.setAttribute(key, \"\");\n                else elm.removeAttribute(key);\n            } else elm.setAttribute(key, attributes[key]);\n        }\n    }\n    return elm;\n}\nfunction $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$walker(oldNode, newNode) {\n    const nc = Array.from(newNode.childNodes);\n    const oc = Array.from(oldNode.childNodes);\n    if (oc.length === 0 && nc.length === 0) return;\n    $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$syncNodes(oldNode, newNode);\n    if (oldNode.nodeType === Node.TEXT_NODE) return;\n    if (oc.length < nc.length) nc.forEach((x, index)=>{\n        if (oc[index] == null) oldNode.append($1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$addAttributes(x.cloneNode(true), x));\n    });\n    if (oc.length > nc.length) oc.forEach((c, i)=>{\n        if (nc[i] == null) c.remove();\n    });\n    oc.forEach((oChild, index)=>{\n        const nChild = nc[index];\n        if (nChild == null) return;\n        if (oChild.tagName !== nChild.tagName) oChild.replaceWith(nChild);\n        $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$syncNodes(oChild, nChild);\n        $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$walker(oChild, nChild);\n    });\n}\nfunction $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$syncNodes(oldNode, newNode) {\n    if (oldNode.nodeType === Node.TEXT_NODE) {\n        if (oldNode.nodeValue !== newNode.nodeValue) oldNode.nodeValue = newNode.nodeValue;\n        return;\n    }\n    // Add attributes that are not present in the old node\n    if (newNode.attributes?.length) Array.from(newNode.attributes).forEach((attr)=>{\n        if (oldNode.getAttribute(attr.name) !== attr.value) oldNode.setAttribute(attr.name, attr.value);\n    });\n    // Remove attributes that are not present in the new node\n    if (oldNode.attributes?.length) Array.from(oldNode.attributes).forEach((attr)=>{\n        if (!newNode.hasAttribute(attr.name)) oldNode.removeAttribute(attr.name);\n    });\n}\nfunction $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$addAttributes(clone, node) {\n    if (!clone.$tent && !node.$tent) return clone;\n    Object.keys(node.$tent.attributes).forEach((key)=>clone[key] = node.$tent.attributes[key]);\n    if (clone.hasChildNodes()) for (const [index, entry] of clone.childNodes.entries())$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$addAttributes(entry, node.childNodes[index]);\n    return clone;\n}\nconst $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$t = [\n    \"div\",\n    \"p\",\n    \"ul\",\n    \"li\",\n    \"button\",\n    \"input\",\n    \"label\",\n    \"form\",\n    \"span\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"a\",\n    \"img\",\n    \"video\",\n    \"audio\",\n    \"canvas\",\n    \"table\",\n    \"tr\",\n    \"td\",\n    \"th\",\n    \"thead\",\n    \"tbody\",\n    \"tfoot\",\n    \"select\",\n    \"option\",\n    \"textarea\",\n    \"pre\",\n    \"code\",\n    \"blockquote\",\n    \"hr\",\n    \"br\",\n    \"iframe\",\n    \"nav\",\n    \"header\",\n    \"footer\",\n    \"main\",\n    \"section\",\n    \"article\",\n    \"aside\",\n    \"small\",\n    \"b\"\n];\nconst $1522cb89a5b7fae6$export$8b7a896ae75accbf = {};\n$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$t.forEach((tag)=>$1522cb89a5b7fae6$export$8b7a896ae75accbf[tag] = (children, attrs)=>$1522cb89a5b7fae6$export$ee84a198a55b65e5([\n            tag,\n            children,\n            attrs\n        ]));\n\n});\n\n\nvar $1Ovn3 = parcelRequire(\"1Ovn3\");\nconst { div: $cc1c2e7ccd6ff391$var$div } = (0, $1Ovn3.tags);\nconst $cc1c2e7ccd6ff391$var$Avatar = {\n    view: ({ attr: attr })=>{\n        const src = attr(\"src\");\n        if (!src) return $cc1c2e7ccd6ff391$var$div([]);\n        return $cc1c2e7ccd6ff391$var$div(\"\", {\n            style: `background-image: url(${src}); width: 50px; height: 50px; border-radius: 50px;`\n        });\n    }\n};\ndocument.querySelectorAll(\".avatar\").forEach((el)=>{\n    (0, $1Ovn3.mount)(el, $cc1c2e7ccd6ff391$var$Avatar);\n});\n\n\n//# sourceMappingURL=avatar.4841bc4e.js.map\n","function $b013a5dd6d18443e$export$186d02efde07ef98(el, component) {\n    const { state: state = {}, view: view, mounted: mounted } = component;\n    let node;\n    if (el == null) return;\n    const handler = {\n        get (obj, key) {\n            if (typeof obj[key] === \"object\" && obj[key] != null) return new Proxy(obj[key], handler);\n            else return obj[key];\n        },\n        set (obj, prop, value) {\n            if (!obj.hasOwnProperty(prop)) throw new Error(`The property \"${String(prop)}\" does not exist on the state object.`);\n            if (obj[prop] === value) return true;\n            const s = Reflect.set(obj, prop, value);\n            $b013a5dd6d18443e$var$walker(node, view({\n                state: proxy,\n                el: el,\n                attr: $b013a5dd6d18443e$var$getAttribute(el)\n            }));\n            return s;\n        }\n    };\n    const proxy = new Proxy({\n        ...state\n    }, handler);\n    node = view({\n        state: proxy,\n        el: el,\n        attr: $b013a5dd6d18443e$var$getAttribute(el)\n    });\n    node.$tent = {\n        attributes: {},\n        isComponent: true\n    };\n    el.append(node);\n    mounted?.({\n        state: proxy,\n        el: el,\n        attr: $b013a5dd6d18443e$var$getAttribute(el)\n    });\n}\nfunction $b013a5dd6d18443e$var$getAttribute(el) {\n    return (name)=>{\n        const attr = el.attributes.getNamedItem(name);\n        if (!attr) return;\n        return attr.value;\n    };\n}\nfunction $b013a5dd6d18443e$export$ee84a198a55b65e5(context) {\n    const [tag, children, attributes] = context;\n    const elm = document.createElement(tag);\n    elm.$tent = {\n        attributes: {},\n        isComponent: false\n    };\n    if (Array.isArray(children)) children.forEach((c)=>{\n        elm.append(Array.isArray(c) ? $b013a5dd6d18443e$export$ee84a198a55b65e5(c) : c);\n    });\n    else elm.append(typeof children === \"number\" ? children.toString() : children);\n    for(const key in attributes){\n        elm.$tent.attributes[key] = attributes[key];\n        if (key.startsWith(\"on\") || /[A-Z]/.test(key)) elm[key] = attributes[key];\n        else {\n            const val = attributes[key];\n            if (typeof val === \"boolean\") {\n                if (val) elm.setAttribute(key, \"\");\n                else elm.removeAttribute(key);\n            } else elm.setAttribute(key, attributes[key]);\n        }\n    }\n    return elm;\n}\nfunction $b013a5dd6d18443e$var$walker(oldNode, newNode) {\n    const nc = Array.from(newNode.childNodes);\n    const oc = Array.from(oldNode.childNodes);\n    if (oc.length === 0 && nc.length === 0) return;\n    $b013a5dd6d18443e$var$syncNodes(oldNode, newNode);\n    if (oldNode.nodeType === Node.TEXT_NODE) return;\n    if (oc.length < nc.length) nc.forEach((x, index)=>{\n        if (oc[index] == null) oldNode.append($b013a5dd6d18443e$var$addAttributes(x.cloneNode(true), x));\n    });\n    if (oc.length > nc.length) oc.forEach((c, i)=>{\n        if (nc[i] == null) c.remove();\n    });\n    oc.forEach((oChild, index)=>{\n        const nChild = nc[index];\n        if (nChild == null) return;\n        if (oChild.tagName !== nChild.tagName) oChild.replaceWith(nChild);\n        $b013a5dd6d18443e$var$syncNodes(oChild, nChild);\n        $b013a5dd6d18443e$var$walker(oChild, nChild);\n    });\n}\nfunction $b013a5dd6d18443e$var$syncNodes(oldNode, newNode) {\n    if (oldNode.nodeType === Node.TEXT_NODE) {\n        if (oldNode.nodeValue !== newNode.nodeValue) oldNode.nodeValue = newNode.nodeValue;\n        return;\n    }\n    // Add attributes that are not present in the old node\n    if (newNode.attributes?.length) Array.from(newNode.attributes).forEach((attr)=>{\n        if (oldNode.getAttribute(attr.name) !== attr.value) oldNode.setAttribute(attr.name, attr.value);\n    });\n    // Remove attributes that are not present in the new node\n    if (oldNode.attributes?.length) Array.from(oldNode.attributes).forEach((attr)=>{\n        if (!newNode.hasAttribute(attr.name)) oldNode.removeAttribute(attr.name);\n    });\n}\nfunction $b013a5dd6d18443e$var$addAttributes(clone, node) {\n    if (!clone.$tent && !node.$tent) return clone;\n    Object.keys(node.$tent.attributes).forEach((key)=>clone[key] = node.$tent.attributes[key]);\n    if (clone.hasChildNodes()) for (const [index, entry] of clone.childNodes.entries())$b013a5dd6d18443e$var$addAttributes(entry, node.childNodes[index]);\n    return clone;\n}\nconst $b013a5dd6d18443e$var$t = [\n    \"div\",\n    \"p\",\n    \"ul\",\n    \"li\",\n    \"button\",\n    \"input\",\n    \"label\",\n    \"form\",\n    \"span\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"a\",\n    \"img\",\n    \"video\",\n    \"audio\",\n    \"canvas\",\n    \"table\",\n    \"tr\",\n    \"td\",\n    \"th\",\n    \"thead\",\n    \"tbody\",\n    \"tfoot\",\n    \"select\",\n    \"option\",\n    \"textarea\",\n    \"pre\",\n    \"code\",\n    \"blockquote\",\n    \"hr\",\n    \"br\",\n    \"iframe\",\n    \"nav\",\n    \"header\",\n    \"footer\",\n    \"main\",\n    \"section\",\n    \"article\",\n    \"aside\",\n    \"small\",\n    \"b\"\n];\nconst $b013a5dd6d18443e$export$8b7a896ae75accbf = {};\n$b013a5dd6d18443e$var$t.forEach((tag)=>$b013a5dd6d18443e$export$8b7a896ae75accbf[tag] = (children, attrs)=>$b013a5dd6d18443e$export$ee84a198a55b65e5([\n            tag,\n            children,\n            attrs\n        ]));\n\n\nexport {$b013a5dd6d18443e$export$186d02efde07ef98 as mount, $b013a5dd6d18443e$export$ee84a198a55b65e5 as createTag, $b013a5dd6d18443e$export$8b7a896ae75accbf as tags};\n//# sourceMappingURL=module.js.map\n","import {\n  type Children,\n  type Context,\n  type Component,\n  type TentNode,\n} from './types';\n\nfunction mount<S extends object>(\n  el: HTMLElement | Element | null,\n  component: Component<S>,\n) {\n  const { state = {} as S, view, mounted } = component;\n  let node: TentNode;\n\n  if (el == null) {\n    return;\n  }\n\n  const handler = {\n    get(obj: S, key: string) {\n      if (typeof obj[key] === 'object' && obj[key] != null) {\n        return new Proxy(obj[key], handler);\n      } else {\n        return obj[key];\n      }\n    },\n    set(obj: S, prop: string, value: unknown) {\n      if (!obj.hasOwnProperty(prop)) {\n        throw new Error(\n          `The property \"${String(prop)}\" does not exist on the state object.`,\n        );\n      }\n      if (obj[prop] === value) return true;\n\n      const s = Reflect.set(obj, prop, value);\n\n      walker(node, view({ state: proxy, el, attr: getAttribute(el) }));\n\n      return s;\n    },\n  };\n\n  const proxy = new Proxy<S>({ ...state }, handler);\n\n  node = view({ state: proxy, el, attr: getAttribute(el) });\n  node.$tent = {\n    attributes: {},\n    isComponent: true,\n  };\n\n  el.append(node);\n\n  mounted?.({ state: proxy, el, attr: getAttribute(el) });\n}\n\nfunction getAttribute(el: HTMLElement | Element) {\n  return (name: string) => {\n    const attr = el.attributes.getNamedItem(name);\n\n    if (!attr) {\n      return;\n    }\n\n    return attr.value;\n  };\n}\n\nfunction createTag(context: Context) {\n  const [tag, children, attributes] = context;\n  const elm = document.createElement(tag) as TentNode;\n\n  elm.$tent = {\n    attributes: {},\n    isComponent: false,\n  };\n\n  if (Array.isArray(children)) {\n    children.forEach((c) => {\n      elm.append(Array.isArray(c) ? createTag(c) : c);\n    });\n  } else {\n    elm.append(typeof children === 'number' ? children.toString() : children);\n  }\n\n  for (const key in attributes) {\n    elm.$tent.attributes[key] = attributes[key];\n\n    if (key.startsWith('on') || /[A-Z]/.test(key)) {\n      elm[key] = attributes[key];\n    } else {\n      const val = attributes[key];\n      if (typeof val === 'boolean') {\n        if (val) {\n          elm.setAttribute(key, '');\n        } else {\n          elm.removeAttribute(key);\n        }\n      } else {\n        elm.setAttribute(key, attributes[key]);\n      }\n    }\n  }\n\n  return elm;\n}\n\nfunction walker(oldNode: TentNode, newNode: TentNode) {\n  const nc = Array.from(newNode.childNodes) as TentNode[];\n  const oc = Array.from(oldNode.childNodes) as TentNode[];\n\n  if (oc.length === 0 && nc.length === 0) {\n    return;\n  }\n\n  syncNodes(oldNode, newNode);\n\n  if (oldNode.nodeType === Node.TEXT_NODE) {\n    return;\n  }\n\n  if (oc.length < nc.length) {\n    nc.forEach((x, index) => {\n      if (oc[index] == null) {\n        oldNode.append(addAttributes(x.cloneNode(true) as TentNode, x));\n      }\n    });\n  }\n\n  if (oc.length > nc.length) {\n    oc.forEach((c, i) => {\n      if (nc[i] == null) {\n        c.remove();\n      }\n    });\n  }\n\n  oc.forEach((oChild, index) => {\n    const nChild = nc[index];\n\n    if (nChild == null) {\n      return;\n    }\n\n    if (oChild.tagName !== nChild.tagName) {\n      oChild.replaceWith(nChild);\n    }\n\n    syncNodes(oChild, nChild);\n\n    walker(oChild, nChild);\n  });\n}\n\nfunction syncNodes(oldNode: TentNode, newNode: TentNode) {\n  if (oldNode.nodeType === Node.TEXT_NODE) {\n    if (oldNode.nodeValue !== newNode.nodeValue) {\n      oldNode.nodeValue = newNode.nodeValue;\n    }\n\n    return;\n  }\n\n  // Add attributes that are not present in the old node\n  if (newNode.attributes?.length) {\n    Array.from(newNode.attributes).forEach((attr) => {\n      if (oldNode.getAttribute(attr.name) !== attr.value) {\n        oldNode.setAttribute(attr.name, attr.value);\n      }\n    });\n  }\n  // Remove attributes that are not present in the new node\n  if (oldNode.attributes?.length) {\n    Array.from(oldNode.attributes).forEach((attr) => {\n      if (!newNode.hasAttribute(attr.name)) {\n        oldNode.removeAttribute(attr.name);\n      }\n    });\n  }\n}\n\nfunction addAttributes(clone: TentNode, node: TentNode) {\n  if (!clone.$tent && !node.$tent) return clone;\n\n  Object.keys(node.$tent.attributes).forEach(\n    (key) => (clone[key] = node.$tent.attributes[key]),\n  );\n\n  if (clone.hasChildNodes()) {\n    for (const [index, entry] of clone.childNodes.entries()) {\n      addAttributes(entry as TentNode, node.childNodes[index] as TentNode);\n    }\n  }\n\n  return clone;\n}\n\nconst t = [\n  'div',\n  'p',\n  'ul',\n  'li',\n  'button',\n  'input',\n  'label',\n  'form',\n  'span',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'a',\n  'img',\n  'video',\n  'audio',\n  'canvas',\n  'table',\n  'tr',\n  'td',\n  'th',\n  'thead',\n  'tbody',\n  'tfoot',\n  'select',\n  'option',\n  'textarea',\n  'pre',\n  'code',\n  'blockquote',\n  'hr',\n  'br',\n  'iframe',\n  'nav',\n  'header',\n  'footer',\n  'main',\n  'section',\n  'article',\n  'aside',\n  'small',\n  'b',\n];\nconst tags: Record<string, (children: Children, attrs?: object) => TentNode> =\n  {};\nt.forEach(\n  (tag) => (tags[tag] = (children, attrs) => createTag([tag, children, attrs])),\n);\n\nexport {\n  mount,\n  tags,\n  createTag,\n  type Component,\n  type Children,\n  type Context,\n  type TentNode,\n};\n","import { type Component, mount, tags } from '@tentjs/tent';\n\nconst { div } = tags;\n\nconst Avatar: Component<any> = {\n  view: ({ attr }) => {\n    const src = attr('src');\n\n    if (!src) {\n      return div([]);\n    }\n\n    return div('', {\n      style: `background-image: url(${src}); width: 50px; height: 50px; border-radius: 50px;`,\n    });\n  },\n};\n\ndocument.querySelectorAll('.avatar').forEach((el) => {\n  mount(el, Avatar);\n});\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$1522cb89a5b7fae6$export$186d02efde07ef98","el","component","node","state","view","mounted","handler","obj","key","Proxy","prop","value","hasOwnProperty","String","Reflect","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$walker","oldNode","newNode","nc","Array","from","childNodes","oc","length","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$syncNodes","nodeType","Node","TEXT_NODE","forEach","x","index","append","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$addAttributes","clone","$tent","keys","attributes","hasChildNodes","entry","entries","cloneNode","c","i","remove","oChild","nChild","tagName","replaceWith","proxy","attr","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute","isComponent","name","getNamedItem","nodeValue","getAttribute","setAttribute","hasAttribute","removeAttribute","$1522cb89a5b7fae6$export$8b7a896ae75accbf","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$t","tag","children","attrs","$1522cb89a5b7fae6$export$ee84a198a55b65e5","context","elm","document","createElement","isArray","toString","startsWith","test","val","$1Ovn3","div","$cc1c2e7ccd6ff391$var$div","tags","$cc1c2e7ccd6ff391$var$Avatar","src","style","querySelectorAll","mount"],"version":3,"file":"avatar.4841bc4e.js.map"}