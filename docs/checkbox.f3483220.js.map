{"mappings":"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","sources":["<anon>","node_modules/@tentjs/tent/dist/module.js","node_modules/@tentjs/tent/dist/src/main.ts","src/components/checkbox.ts","src/css/checkbox.module.css"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire27b0\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire27b0\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1Ovn3\", function(module, exports) {\n\n$parcel$export(module.exports, \"mount\", () => $1522cb89a5b7fae6$export$186d02efde07ef98);\n$parcel$export(module.exports, \"tags\", () => $1522cb89a5b7fae6$export$8b7a896ae75accbf);\nfunction $1522cb89a5b7fae6$export$186d02efde07ef98(element, component) {\n    if (element == null) return;\n    const { state: state = {}, view: view, mounted: mounted } = component;\n    let node;\n    const el = element;\n    el.$tent = {\n        attributes: {},\n        isComponent: true\n    };\n    const handler = {\n        get (obj, key) {\n            if (typeof obj[key] === \"object\" && obj[key] != null) return new Proxy(obj[key], handler);\n            else return obj[key];\n        },\n        set (obj, prop, value) {\n            if (!obj.hasOwnProperty(prop)) throw new Error(`The property \"${String(prop)}\" does not exist on the state object.`);\n            if (obj[prop] === value) return true;\n            const s = Reflect.set(obj, prop, value);\n            $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$walker(node, view({\n                state: proxy,\n                el: el,\n                attr: $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute(el)\n            }));\n            return s;\n        }\n    };\n    const proxy = new Proxy({\n        ...state\n    }, handler);\n    node = view({\n        state: proxy,\n        el: el,\n        attr: $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute(el)\n    });\n    node.$tent = {\n        attributes: {},\n        isComponent: false\n    };\n    el.append(node);\n    mounted?.({\n        state: proxy,\n        el: el,\n        attr: $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute(el)\n    });\n}\nfunction $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute(el) {\n    return (name)=>{\n        const attr = el.attributes.getNamedItem(name);\n        if (!attr) return;\n        const value = attr.value;\n        if (value === \"\") // I should find a better way to handle this,\n        // what I want to avoid is returning `T | undefined | 'true'`\n        return \"true\";\n        return value;\n    };\n}\nfunction $1522cb89a5b7fae6$export$ee84a198a55b65e5(context) {\n    const [tag, children, attributes] = context;\n    const el = document.createElement(tag);\n    el.$tent = {\n        attributes: {},\n        isComponent: false\n    };\n    for(const key in attributes){\n        const value = attributes[key];\n        el.$tent.attributes[key] = value;\n        $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$addAttribute(el, key, value);\n    }\n    if (Array.isArray(children)) children.forEach((c)=>{\n        el.append(Array.isArray(c) ? $1522cb89a5b7fae6$export$ee84a198a55b65e5(c) : c);\n    });\n    else el.append(typeof children === \"number\" ? children.toString() : children);\n    return el;\n}\nfunction $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$addAttribute(el, key, value) {\n    if (typeof value === \"boolean\") {\n        if (value) el.setAttribute(key, \"\");\n        else el.removeAttribute(key);\n        return;\n    }\n    if (el[key] === undefined) el.setAttribute(key, value);\n    else el[key] = value;\n}\nfunction $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$walker(oldNode, newNode) {\n    const nc = Array.from(newNode.childNodes);\n    const oc = Array.from(oldNode.childNodes);\n    if (oldNode.nodeType === Node.TEXT_NODE) {\n        if (oldNode.nodeValue !== newNode.nodeValue) oldNode.nodeValue = newNode.nodeValue;\n        return;\n    }\n    // Remove attributes that are not present in the new node\n    for(const key in oldNode.$tent.attributes)if (newNode.$tent.attributes[key] == null) {\n        delete oldNode.$tent.attributes[key];\n        if (oldNode.hasAttribute(key)) oldNode.removeAttribute(key);\n    }\n    // Add attributes that are not present in the old node\n    const attrs = {\n        ...oldNode.$tent.attributes,\n        ...newNode.$tent.attributes\n    };\n    for(const key in attrs)$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$addAttribute(oldNode, key, attrs[key]);\n    if (oc.length === 0 && nc.length === 0) return;\n    if (oc.length < nc.length) nc.forEach((x, index)=>{\n        if (oc[index] == null) oldNode.append(x);\n    });\n    if (oc.length > nc.length) oc.forEach((c, i)=>{\n        if (nc[i] == null) c.remove();\n    });\n    oc.forEach((oChild, index)=>{\n        const nChild = nc[index];\n        if (nChild == null) return;\n        if (oChild.tagName !== nChild.tagName) oChild.replaceWith(nChild);\n        $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$walker(oChild, nChild);\n    });\n}\nconst $1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$t = [\n    \"div\",\n    \"p\",\n    \"ul\",\n    \"li\",\n    \"button\",\n    \"input\",\n    \"label\",\n    \"form\",\n    \"span\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"a\",\n    \"img\",\n    \"video\",\n    \"audio\",\n    \"canvas\",\n    \"table\",\n    \"tr\",\n    \"td\",\n    \"th\",\n    \"thead\",\n    \"tbody\",\n    \"tfoot\",\n    \"select\",\n    \"option\",\n    \"textarea\",\n    \"pre\",\n    \"code\",\n    \"blockquote\",\n    \"hr\",\n    \"br\",\n    \"iframe\",\n    \"nav\",\n    \"header\",\n    \"footer\",\n    \"main\",\n    \"section\",\n    \"article\",\n    \"aside\",\n    \"small\",\n    \"b\"\n];\nconst $1522cb89a5b7fae6$export$8b7a896ae75accbf = {};\n$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$t.forEach((tag)=>$1522cb89a5b7fae6$export$8b7a896ae75accbf[tag] = (children, attrs)=>$1522cb89a5b7fae6$export$ee84a198a55b65e5([\n            tag,\n            children,\n            attrs\n        ]));\n\n});\n\n\nvar $1Ovn3 = parcelRequire(\"1Ovn3\");\nvar $7827bc3a890b381e$export$b07e517d22efa1ca;\n$7827bc3a890b381e$export$b07e517d22efa1ca = `pBNwfG_checkbox`;\n\n\nconst { div: $2a5adf33997376b3$var$div, input: $2a5adf33997376b3$var$input, p: $2a5adf33997376b3$var$p } = (0, $1Ovn3.tags);\nconst $2a5adf33997376b3$var$Checkbox = {\n    state: {\n        checked: false\n    },\n    view: ({ state: state })=>$2a5adf33997376b3$var$div([\n            $2a5adf33997376b3$var$input([], {\n                type: \"checkbox\",\n                checked: state.checked,\n                onchange: ({ target: target })=>state.checked = target.checked,\n                className: $7827bc3a890b381e$export$b07e517d22efa1ca\n            }),\n            $2a5adf33997376b3$var$p(state.checked ? \"Checked\" : \"Not checked\")\n        ])\n};\n(0, $1Ovn3.mount)(document.querySelector(\".recipe\"), $2a5adf33997376b3$var$Checkbox);\n\n\n//# sourceMappingURL=checkbox.f3483220.js.map\n","function $b013a5dd6d18443e$export$186d02efde07ef98(element, component) {\n    if (element == null) return;\n    const { state: state = {}, view: view, mounted: mounted } = component;\n    let node;\n    const el = element;\n    el.$tent = {\n        attributes: {},\n        isComponent: true\n    };\n    const handler = {\n        get (obj, key) {\n            if (typeof obj[key] === \"object\" && obj[key] != null) return new Proxy(obj[key], handler);\n            else return obj[key];\n        },\n        set (obj, prop, value) {\n            if (!obj.hasOwnProperty(prop)) throw new Error(`The property \"${String(prop)}\" does not exist on the state object.`);\n            if (obj[prop] === value) return true;\n            const s = Reflect.set(obj, prop, value);\n            $b013a5dd6d18443e$var$walker(node, view({\n                state: proxy,\n                el: el,\n                attr: $b013a5dd6d18443e$var$getAttribute(el)\n            }));\n            return s;\n        }\n    };\n    const proxy = new Proxy({\n        ...state\n    }, handler);\n    node = view({\n        state: proxy,\n        el: el,\n        attr: $b013a5dd6d18443e$var$getAttribute(el)\n    });\n    node.$tent = {\n        attributes: {},\n        isComponent: false\n    };\n    el.append(node);\n    mounted?.({\n        state: proxy,\n        el: el,\n        attr: $b013a5dd6d18443e$var$getAttribute(el)\n    });\n}\nfunction $b013a5dd6d18443e$var$getAttribute(el) {\n    return (name)=>{\n        const attr = el.attributes.getNamedItem(name);\n        if (!attr) return;\n        const value = attr.value;\n        if (value === \"\") // TODO: This might not be the desired behavior.\n        // I should find a better way to handle this,\n        // what I want to avoid is returning `T | undefined | 'true'`\n        return \"true\";\n        return value;\n    };\n}\nfunction $b013a5dd6d18443e$export$ee84a198a55b65e5(context) {\n    const [tag, children, attributes] = context;\n    const el = document.createElement(tag);\n    el.$tent = {\n        attributes: {},\n        isComponent: false\n    };\n    for(const key in attributes){\n        const value = attributes[key];\n        el.$tent.attributes[key] = value;\n        $b013a5dd6d18443e$var$addAttribute(el, key, value);\n    }\n    if (Array.isArray(children)) children.forEach((c)=>{\n        el.append(Array.isArray(c) ? $b013a5dd6d18443e$export$ee84a198a55b65e5(c) : c);\n    });\n    else el.append(typeof children === \"number\" ? children.toString() : children);\n    return el;\n}\nfunction $b013a5dd6d18443e$var$addAttribute(el, key, value) {\n    if (typeof value === \"boolean\") {\n        if (value) el.setAttribute(key, \"\");\n        else el.removeAttribute(key);\n        return;\n    }\n    if (el[key] === undefined) el.setAttribute(key, value);\n    else el[key] = value;\n}\nfunction $b013a5dd6d18443e$var$walker(oldNode, newNode) {\n    const nc = Array.from(newNode.childNodes);\n    const oc = Array.from(oldNode.childNodes);\n    if (oldNode.nodeType === Node.TEXT_NODE) {\n        if (oldNode.nodeValue !== newNode.nodeValue) oldNode.nodeValue = newNode.nodeValue;\n        return;\n    }\n    // Remove attributes that are not present in the new node\n    for(const key in oldNode.$tent.attributes)if (newNode.$tent.attributes[key] == null) {\n        delete oldNode.$tent.attributes[key];\n        if (oldNode.hasAttribute(key)) oldNode.removeAttribute(key);\n    }\n    // Add attributes that are not present in the old node\n    const attrs = {\n        ...oldNode.$tent.attributes,\n        ...newNode.$tent.attributes\n    };\n    for(const key in attrs)$b013a5dd6d18443e$var$addAttribute(oldNode, key, attrs[key]);\n    if (oc.length === 0 && nc.length === 0) return;\n    if (oc.length < nc.length) nc.forEach((x, index)=>{\n        if (oc[index] == null) oldNode.append(x);\n    });\n    if (oc.length > nc.length) oc.forEach((c, i)=>{\n        if (nc[i] == null) c.remove();\n    });\n    oc.forEach((oChild, index)=>{\n        const nChild = nc[index];\n        if (nChild == null) return;\n        if (oChild.tagName !== nChild.tagName) oChild.replaceWith(nChild);\n        $b013a5dd6d18443e$var$walker(oChild, nChild);\n    });\n}\nconst $b013a5dd6d18443e$var$t = [\n    \"div\",\n    \"p\",\n    \"ul\",\n    \"li\",\n    \"button\",\n    \"input\",\n    \"label\",\n    \"form\",\n    \"span\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"a\",\n    \"img\",\n    \"video\",\n    \"audio\",\n    \"canvas\",\n    \"table\",\n    \"tr\",\n    \"td\",\n    \"th\",\n    \"thead\",\n    \"tbody\",\n    \"tfoot\",\n    \"select\",\n    \"option\",\n    \"textarea\",\n    \"pre\",\n    \"code\",\n    \"blockquote\",\n    \"hr\",\n    \"br\",\n    \"iframe\",\n    \"nav\",\n    \"header\",\n    \"footer\",\n    \"main\",\n    \"section\",\n    \"article\",\n    \"aside\",\n    \"small\",\n    \"b\"\n];\nconst $b013a5dd6d18443e$export$8b7a896ae75accbf = {};\n$b013a5dd6d18443e$var$t.forEach((tag)=>$b013a5dd6d18443e$export$8b7a896ae75accbf[tag] = (children, attrs)=>$b013a5dd6d18443e$export$ee84a198a55b65e5([\n            tag,\n            children,\n            attrs\n        ]));\n\n\nexport {$b013a5dd6d18443e$export$186d02efde07ef98 as mount, $b013a5dd6d18443e$export$ee84a198a55b65e5 as createTag, $b013a5dd6d18443e$export$8b7a896ae75accbf as tags};\n//# sourceMappingURL=module.js.map\n","import {\n  type Children,\n  type Context,\n  type Component,\n  type TentNode,\n  type Attrs,\n} from './types';\n\nfunction mount<S extends {} = {}, A extends Attrs = {}>(\n  element: HTMLElement | Element | TentNode<A> | null,\n  component: Component<S, A>,\n) {\n  if (element == null) {\n    return;\n  }\n\n  const { state = {} as S, view, mounted } = component;\n  let node: TentNode<A>;\n\n  const el = element as TentNode<A>;\n\n  el.$tent = {\n    attributes: {},\n    isComponent: true,\n  };\n\n  const handler = {\n    get(obj: S, key: string) {\n      if (typeof obj[key] === 'object' && obj[key] != null) {\n        return new Proxy(obj[key], handler);\n      } else {\n        return obj[key];\n      }\n    },\n    set(obj: S, prop: string, value: unknown) {\n      if (!obj.hasOwnProperty(prop)) {\n        throw new Error(\n          `The property \"${String(prop)}\" does not exist on the state object.`,\n        );\n      }\n      if (obj[prop] === value) return true;\n\n      const s = Reflect.set(obj, prop, value);\n\n      walker(node, view({ state: proxy, el, attr: getAttribute<A>(el) }));\n\n      return s;\n    },\n  };\n\n  const proxy = new Proxy<S>({ ...state }, handler);\n\n  node = view({ state: proxy, el, attr: getAttribute<A>(el) });\n  node.$tent = {\n    attributes: {},\n    isComponent: false,\n  };\n\n  el.append(node);\n\n  mounted?.({ state: proxy, el, attr: getAttribute<A>(el) });\n}\n\nfunction getAttribute<A>(el: HTMLElement | Element) {\n  return <K extends keyof A>(name: K): A[K] | undefined => {\n    const attr = el.attributes.getNamedItem(name as string);\n\n    if (!attr) {\n      return;\n    }\n\n    const value = attr.value;\n\n    if (value === '') {\n      // TODO: This might not be the desired behavior.\n      // I should find a better way to handle this,\n      // what I want to avoid is returning `T | undefined | 'true'`\n      return 'true' as A[K];\n    }\n\n    return value as A[K];\n  };\n}\n\nfunction createTag(context: Context) {\n  const [tag, children, attributes] = context;\n  const el = document.createElement(tag) as TentNode;\n\n  el.$tent = {\n    attributes: {},\n    isComponent: false,\n  };\n\n  for (const key in attributes) {\n    const value = attributes[key];\n\n    el.$tent.attributes[key] = value;\n\n    addAttribute(el, key, value);\n  }\n\n  if (Array.isArray(children)) {\n    children.forEach((c) => {\n      el.append(Array.isArray(c) ? createTag(c) : c);\n    });\n  } else {\n    el.append(typeof children === 'number' ? children.toString() : children);\n  }\n\n  return el;\n}\n\nfunction addAttribute<A extends Attrs>(\n  el: TentNode<A>,\n  key: string,\n  value: string,\n) {\n  if (typeof value === 'boolean') {\n    if (value) {\n      el.setAttribute(key, '');\n    } else {\n      el.removeAttribute(key);\n    }\n\n    return;\n  }\n\n  if (el[key] === undefined) {\n    el.setAttribute(key, value);\n  } else {\n    el[key] = value;\n  }\n}\n\nfunction walker<A extends Attrs>(oldNode: TentNode<A>, newNode: TentNode<A>) {\n  const nc = Array.from(newNode.childNodes) as TentNode<A>[];\n  const oc = Array.from(oldNode.childNodes) as TentNode<A>[];\n\n  if (oldNode.nodeType === Node.TEXT_NODE) {\n    if (oldNode.nodeValue !== newNode.nodeValue) {\n      oldNode.nodeValue = newNode.nodeValue;\n    }\n\n    return;\n  }\n\n  // Remove attributes that are not present in the new node\n  for (const key in oldNode.$tent.attributes) {\n    if (newNode.$tent.attributes[key] == null) {\n      delete oldNode.$tent.attributes[key];\n      if (oldNode.hasAttribute(key)) {\n        oldNode.removeAttribute(key);\n      }\n    }\n  }\n\n  // Add attributes that are not present in the old node\n  const attrs = {\n    ...oldNode.$tent.attributes,\n    ...newNode.$tent.attributes,\n  };\n\n  for (const key in attrs) {\n    addAttribute(oldNode, key, attrs[key]);\n  }\n\n  if (oc.length === 0 && nc.length === 0) {\n    return;\n  }\n\n  if (oc.length < nc.length) {\n    nc.forEach((x, index) => {\n      if (oc[index] == null) {\n        oldNode.append(x);\n      }\n    });\n  }\n\n  if (oc.length > nc.length) {\n    oc.forEach((c, i) => {\n      if (nc[i] == null) {\n        c.remove();\n      }\n    });\n  }\n\n  oc.forEach((oChild, index) => {\n    const nChild = nc[index];\n\n    if (nChild == null) {\n      return;\n    }\n\n    if (oChild.tagName !== nChild.tagName) {\n      oChild.replaceWith(nChild);\n    }\n\n    walker(oChild, nChild);\n  });\n}\n\nconst t = [\n  'div',\n  'p',\n  'ul',\n  'li',\n  'button',\n  'input',\n  'label',\n  'form',\n  'span',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'a',\n  'img',\n  'video',\n  'audio',\n  'canvas',\n  'table',\n  'tr',\n  'td',\n  'th',\n  'thead',\n  'tbody',\n  'tfoot',\n  'select',\n  'option',\n  'textarea',\n  'pre',\n  'code',\n  'blockquote',\n  'hr',\n  'br',\n  'iframe',\n  'nav',\n  'header',\n  'footer',\n  'main',\n  'section',\n  'article',\n  'aside',\n  'small',\n  'b',\n];\nconst tags: Record<string, (children: Children, attrs?: object) => TentNode> =\n  {};\nt.forEach(\n  (tag) => (tags[tag] = (children, attrs) => createTag([tag, children, attrs])),\n);\n\nexport {\n  mount,\n  tags,\n  createTag,\n  type Component,\n  type Children,\n  type Context,\n  type TentNode,\n};\n","import { type Component, mount, tags } from '@tentjs/tent';\nimport * as styles from '../css/checkbox.module.css';\n\nconst { div, input, p } = tags;\n\ntype State = {\n  checked: boolean;\n};\n\nconst Checkbox: Component<State> = {\n  state: { checked: false },\n  view: ({ state }) =>\n    div([\n      input([], {\n        type: 'checkbox',\n        checked: state.checked,\n        onchange: ({ target }) => (state.checked = target.checked),\n        className: styles.checkbox,\n      }),\n      p(state.checked ? 'Checked' : 'Not checked'),\n    ]),\n};\n\nmount(document.querySelector('.recipe'), Checkbox);\n",".checkbox {\n  margin: 0;\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$1522cb89a5b7fae6$export$186d02efde07ef98","element","component","node","state","view","mounted","el","$tent","attributes","isComponent","handler","obj","key","Proxy","prop","value","hasOwnProperty","String","Reflect","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$walker","oldNode","newNode","nc","Array","from","childNodes","oc","nodeType","Node","TEXT_NODE","nodeValue","hasAttribute","removeAttribute","attrs","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$addAttribute","length","forEach","x","index","append","c","i","remove","oChild","nChild","tagName","replaceWith","proxy","attr","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$getAttribute","name","getNamedItem","setAttribute","undefined","$1522cb89a5b7fae6$export$8b7a896ae75accbf","$1522cb89a5b7fae6$var$$b013a5dd6d18443e$var$t","tag","children","$1522cb89a5b7fae6$export$ee84a198a55b65e5","context","document","createElement","isArray","toString","$1Ovn3","div","$2a5adf33997376b3$var$div","input","$2a5adf33997376b3$var$input","p","$2a5adf33997376b3$var$p","tags","mount","querySelector","checked","type","onchange","target","className"],"version":3,"file":"checkbox.f3483220.js.map"}